#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt_to_layer_0 1 Q    &kp W        &kp E          &kp R                 &kp T                                                                           &kp Y                    &kp U  &kp I      &kp O    &lt_to_layer_0 1 P
&lt 2 A               &kp S        &kp D          &kp F                 &kp G               &mkp MCLK                          &lt 5 ESCAPE             &kp H                    &kp J  &kp K      &kp L    &lt 2 MINUS
&lt_to_layer_0 3 Z    &kp X        &kp C          &kp V                 &kp B               &mkp LCLK                          &mkp RCLK                &kp N                    &kp M  &kp COMMA  &kp DOT  &lt 3 SLASH
&mt LEFT_SHIFT GLOBE  &lt 5 EQUAL  &lt 6 AT_SIGN  &mt LEFT_CONTROL TAB  &mt LEFT_ALT SPACE  &mt LEFT_COMMAND INT_MUHENKAN      &mt RIGHT_COMMAND ENTER  &mt RIGHT_ALT BACKSPACE                             &mt RIGHT_SHIFT TAB
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&lt 1 F7              &kp F8  &kp F9  &kp F10               &kp F13                                                         &kp C_REWIND          &kp C_PLAY_PAUSE      &kp C_FAST_FORWARD      &kp C_MUTE         &lt 1 C_RECORD
&kp F4                &kp F5  &kp F6  &kp F11               &kp F14             &trans                             &kp F13  &kp C_AC_SEARCH       &kp C_VOICE_COMMAND   &kp C_SLEEP_MODE        &kp C_VOLUME_DOWN  &kp F10
&kp F1                &kp F2  &kp F3  &kp F12               &kp F15             &trans                             &trans   &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_AL_CONTROL_PANEL  &kp C_VOLUME_UP    &kp F11
&mt LEFT_SHIFT GLOBE  &trans  &trans  &mt LEFT_CONTROL TAB  &mt LEFT_ALT SPACE  &mt LEFT_COMMAND INT_MUHENKAN      &trans   &trans                                                                                 &kp F12
            >;

            sensor-bindings = <&ROTATE SCRL_UP SCRL_DOWN>;
        };

        NUM {
            bindings = <
&kp KP_NUMBER_7       &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS                   &kp LEFT_PARENTHESIS                                                      &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&lt 2 KP_NUMBER_4     &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS                    &kp RIGHT_PARENTHESIS  &kp LC(LA(KP_NUMBER_0))            &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&kp KP_NUMBER_1       &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp ASTERISK                &kp SLASH              &kp EQUAL                          &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&mt LEFT_SHIFT GLOBE  &kp KP_NUMBER_0  &kp PERIOD       &mt LEFT_CONTROL LESS_THAN  &mt LEFT_ALT EQUAL     &mt LEFT_COMMAND GREATER_THAN      &trans          &trans                                                                     &kp PIPE
            >;

            sensor-bindings = <&ROTATE SCRL_LEFT SCRL_RIGHT>;
        };

        ARROW {
            bindings = <
&kp ESCAPE            &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME              &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT        &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&mt LEFT_SHIFT GLOBE  &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans    &trans     &trans     &trans     &trans                           &trans    &trans     &trans     &trans     &trans
&mkp MB4  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5  &mkp LCLK      &trans  &mkp MB4  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5
&trans    &trans     &trans     &trans     &trans    &mkp RCLK      &trans  &trans    &trans     &trans     &trans     &trans
&trans    &trans     &trans     &trans     &trans    &trans         &trans  &trans                                     &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans     &trans      &studio_unlock  &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kt KP_N4  &trans      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans     &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
